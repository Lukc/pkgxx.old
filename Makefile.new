# Begin of Makefile

# TODO:
#  * man pages production and installation
#  * Configuration production and installation. (./config.sh)

# Global configuration.

PACKAGE_MANAGER ?= pkgutils # Produces plain tar archives. Just put your
                            # package manager name, lowercase, without 
                            # hyphens, underscores, and so on.
MARCH           ?= i686     # Most common. Just update it when needed.

# Installation directories

DESTDIR      :=
PREFIX       := /usr
EPREFIX      := ${PREFIX}
BINDIR       := ${EPREFIX}/bin
SHAREDIR     := ${PREFIX}/share
LIBDIR       := ${PREFIX}/lib
LIBEXECDIR   := ${EPREFIX}/libexec
SYSCONFDIR   := /etc
MANDIR       := ${SHAREDIR}/man

# For debug
Q := @
# For verbosity
VERBOSE ?= false

# For a nice UI emitting beauty

bold = \033[01m
c_w = ${bold}\033[37m
c_b = ${bold}\033[34m
c_y = ${bold}\033[33m
c_g = ${bold}\033[32m
c_r = ${bold}\033[31m
r   = ${bold}\033[00m

# Generic informations

TRUNK = yes
.if exists(.git/)
PKGXX_VERSION = 0.13.3-${GIT_REVISION:!git rev-list --all 2>/dev/null | wc -l | sed -e 's| *||g'!}
.else
PKGXX_VERSION = 0.13.3
.endif
CROSS := 

# Well, files to produce, install, and so on.

DEFAULTS  != ls defaults/  | egrep '\.zsh$$' | sed -e 's/\.zsh$$//'
MODULES   != ls modules/   | egrep '\.zsh$$' | sed -e 's/\.zsh$$//'
LIBRARIES != ls lib/       | egrep '\.zsh$$' | sed -e 's/\.zsh$$//'

# C

CC := ${CROSS}gcc
CPP := ${CROSS}cpp
CFLAGS := -O2 -pipe
CPPFLAGS := -x c -E -P -D_VERSION=${PKGXX_VERSION} \
            -D_SHAREDIR="${SHAREDIR}" -D_SYSCONFDIR="${SYSCONFDIR}" \
            -D_LIBEXECDIR="${LIBEXECDIR}" \
            -include ${SRC:!pwd!}/src/error.sh.h

# Rules - Generic

all: build

build: pkg++ tools

tools: tools/has

install: update install-config

update:  build install-pkg++ install-defaults install-tools install-modules install-lib

clean: clean-pkg++ clean-defaults clean-tools clean-modules

# Directories (to generate at installation)

${DESTDIR}${BINDIR}:
	$Qmkdir -p "${DESTDIR}${BINDIR}"

${DESTDIR}${SYSCONFDIR}:
	$Qmkdir -p "${DESTDIR}${SYSCONFDIR}"

${DESTDIR}${SYSCONFDIR}/pkg++/defaults:
	$Qmkdir -p "${DESTDIR}${SYSCONFDIR}/pkg++/defaults/"

${DESTDIR}${SHAREDIR}/pkg++/modules:
	$Qmkdir -p "${DESTDIR}${SHAREDIR}/pkg++/modules/"

${DESTDIR}${LIBEXECDIR}/pkg++/has:
	$Qmkdir -p "${DESTDIR}${LIBEXECDIR}/pkg++/has"

${DESTDIR}${LIBDIR}/libpkgxx:
	$Qmkdir -p "${DESTDIR}${LIBDIR}/libpkgxx"

# Rules - Compilations

tools/has: tools/has.c
	@echo -e "${c_w} -- ${c_b}Building    ${c_w}tools/has$r"
	$Q${CC} ${CFLAGS} tools/has.c -o tools/has

PKGXX_FILES != grep "^\#include \"[a-z.]*\"" src/main.sh | sed "s/\#include \"//;s/\"//"
PKGXX_FILES += main.sh # Never forget that one…

pkg++: ${PKGXX_FILES:C/^/src\//}
	@echo -e "${c_w} -- ${c_b}Building    ${c_w}pkg++$r"
	$Qecho "#!/usr/bin/env zsh" > pkg++
.for f in ${PKGXX_FILES}
#	Commented out because too verbose
#	@echo -e "${c_w}     [${c_b}SED${c_w}]      ${c_w}$f"
	$Qsed "s|@LIBDIR@|${LIBDIR}|;s|@SYSCONFDIR@|${SYSCONFDIR}|;\
		s|@SHAREDIR@|${SHAREDIR}|;s|@LIBEXECDIR@|${LIBEXECDIR}|" \
		src/$f >> pkg++
.endfor
#	$Q${CPP} ${CPPFLAGS} src/main.sh.c | ;/^\$$\$$/d;/^$$/d" >> pkg++

config: pkg++.conf
	@: # Well… cp config.sh config is not really wanted.

pkg++.conf: pkg++.conf.in
	@echo -e "${c_w} -- ${c_w}Auto-creating ${c_w}pkg++.conf$r"
	$Qsed -e 's/@MARCH@/${MARCH}/g;s/@PACKAGE_MANAGER@/${PACKAGE_MANAGER}/g' pkg++.conf.in > pkg++.conf

# Rules - Installation

install-config: config ${DESTDIR}${SYSCONFDIR}
	@echo -e "${c_w} -- ${c_g}Installing  ${c_w}pkg++.conf$r"
	$Qinstall -m0644 pkg++.conf ${DESTDIR}${SYSCONFDIR}/pkg++.conf

install-pkg++: ${DESTDIR}${BINDIR} pkg++
	@echo -e "${c_w} -- ${c_g}Installing  ${c_w}pkg++$r"
	$Qinstall -m0755 pkg++ ${DESTDIR}${BINDIR}/pkg++

install-defaults: ${DEFAULTS:C/^/install-defaults\//}

.for i in ${DEFAULTS}
install-defaults/$i: defaults/$i.zsh
	@echo -e "${c_w} -- ${c_g}Installing  ${c_w}defaults/$i.zsh$r"
	$Qinstall -m0644 defaults/$i.zsh ${DESTDIR}${SYSCONFDIR}/pkg++/defaults/$i.zsh
.endfor

install-modules: ${MODULES:C/^/install-modules\//}

.for i in ${MODULES}
install-modules/$i: modules/$i.zsh ${DESTDIR}${SHAREDIR}/pkg++/modules
	@echo -e "${c_w} -- ${c_g}Installing  ${c_w}modules/$i.zsh$r"
	$Qinstall -m0644 modules/$i.zsh ${DESTDIR}${SHAREDIR}/pkg++/modules/$i.zsh
.endfor

install-tools: install-tools/has

install-tools/has: tools/has ${DESTDIR}${LIBEXECDIR}/pkg++/has
	@echo -e "${c_w} -- ${c_g}Installing  ${c_w}tools/has$r"
	$Qinstall -m0755 tools/has ${DESTDIR}${LIBEXECDIR}/pkg++/has

install-lib: ${LIBRARIES:C/^/install-lib\//}

.for i in ${LIBRARIES}
install-lib/$i: lib/$i.zsh ${DESTDIR}${LIBDIR}/libpkgxx
	@echo -e "${c_w} -- ${c_g}Installing  ${c_w}lib/$i.zsh$r"
	$Qinstall -m0644 lib/$i.zsh ${DESTDIR}${LIBDIR}/libpkgxx/$i.zsh
.endfor

# Cleaners

clean-pkg++:
	@echo -e "${c_w} -- ${c_y}Removing    ${c_w}pkg++$r"
	$Qrm -f pkg++

clean-defaults:

clean-modules:

clean-tools:
	@echo -e "${c_w} -- ${c_y}Removing    ${c_w}tools/has$r"
	$Qrm -f tools/has

# End of Makefile
