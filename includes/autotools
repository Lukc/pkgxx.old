#
## Include for Autoconf
#
# Need $name, $version, $release and $source
# Can receive arguments from $configure_opts and $make_opts
# $use_autogen can enable the ./autogen.sh command, which takes parameters from ${autogen_opts[@]}
# $use_configure can disable the ./configure command if set to anything other than "yes".
# 

case $version in
	devel|dev|trunk)
		: ${dirname:="$name"}
		: ${use_autogen:="yes"}
	;;
	*)
		: ${dirname:="$name-$version"}
	;;
esac

case $use_autogen in
	yes|no);;
	*)use_autogen=no;;
esac

: ${use_configure:=yes}

if [[ "$separate_build_dir" = "yes" ]]; then
	build(){
	cd $dirname
		mkdir __build__
		cd __build__
		[[ "$use_autogen" = "yes" ]] && ../autogen.sh ${autogen_opts[@]}
		[[ "$use_configure" = "yes" ]] && ../configure --prefix=$prefix ${configure_opts[@]}
		pkgmake ${make_opts[@]}
		pkgmake ${make_opts[@]} DESTDIR=$PKG install
	}
else
	build(){
	cd $dirname
		[[ "$use_autogen" = "yes" ]] && ./autogen.sh ${autogen_opts[@]}
		[[ "$use_configure" = "yes" ]] && ./configure --prefix=$prefix ${configure_opts[@]}
		pkgmake ${make_opts[@]}
		pkgmake ${make_opts[@]} DESTDIR=$PKG install
	}
fi
